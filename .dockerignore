# 依赖目录
node_modules
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# 构建输出
.next
dist
build
out

# 环境变量文件
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# 日志文件
logs
*.log

# 运行时数据
pids
*.pid
*.seed
*.pid.lock

# 覆盖率目录
coverage
.nyc_output

# 依赖锁定文件（保留 pnpm-lock.yaml）
package-lock.json
yarn.lock

# 可选的 npm 缓存目录
.npm

# 可选的 eslint 缓存
.eslintcache

# 可选的 REPL 历史
.node_repl_history

# 输出的 npm 包
*.tgz

# Yarn 完整性文件
.yarn-integrity

# parcel-bundler 缓存 (https://parceljs.org/)
.cache
.parcel-cache

# next.js 构建输出
.next

# nuxt.js 构建输出
.nuxt

# vuepress 构建输出
.vuepress/dist

# Serverless 目录
.serverless

# FuseBox 缓存
.fusebox/

# DynamoDB Local 文件
.dynamodb/

# TernJS 端口文件
.tern-port

# 存储在 Vercel 中的环境变量
.vercel

# 系统文件
.DS_Store
Thumbs.db

# IDE 文件
.vscode
.idea
*.swp
*.swo
*~

# 测试文件
test
tests
__tests__
*.test.js
*.test.ts
*.spec.js
*.spec.ts

# 文档
*.md
README*
CHANGELOG*
LICENSE*

# Git 相关
.git
.gitignore
.gitattributes

# Docker 相关
Dockerfile*
docker-compose*
.dockerignore

# 脚本和工具
script/
scripts/

# 临时文件
tmp/
temp/

# Python 相关（如果有 Python 脚本）
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
PIPFILE.lock

# 单词数据文件（如果不需要打包到镜像中）
words/

# 其他不需要的文件
*.tar.gz
*.zip
*.rar