# 多阶段构建 - Nginx with Admin Static Resources
# 阶段1: 构建admin静态资源
FROM node:23-alpine AS admin-builder

# 设置工作目录
WORKDIR /app

# 安装 pnpm
RUN npm install -g pnpm@10.7.0

# 复制 package.json 和 pnpm 相关文件（优化缓存层）
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY apps/admin/package.json ./apps/admin/
COPY packages/common/package.json ./packages/common/
COPY packages/utils/package.json ./packages/utils/

# 安装依赖
RUN --mount=type=cache,target=/root/.pnpm-store \
    pnpm install

# 复制源代码
COPY apps/admin ./apps/admin/
COPY packages/common ./packages/common/
COPY packages/utils ./packages/utils/

# 设置构建时环境变量
ENV VITE_API_URL=/

# 构建admin项目
RUN cd apps/admin && pnpm run build

# 阶段2: Nginx with static resources
FROM nginx:alpine

# 安装必要的工具
RUN apk add --no-cache bash

# 复制nginx配置
COPY nginx.conf /etc/nginx/nginx.conf

# 复制nginx初始化脚本
COPY nginx-init.sh /nginx-init.sh
RUN chmod +x /nginx-init.sh

# 复制移动端静态资源
COPY mobile.html /usr/share/nginx/html/mobile.html

# 从构建阶段复制admin静态资源
COPY --from=admin-builder /app/apps/admin/dist /usr/share/nginx/html/admin

# 设置正确的权限
RUN chmod -R 755 /usr/share/nginx/html && \
    chmod -R 644 /usr/share/nginx/html/admin/assets/ 2>/dev/null || true && \
    chmod 644 /usr/share/nginx/html/mobile.html

# 创建必要的nginx目录
RUN mkdir -p /var/log/nginx /var/lib/nginx/logs /var/lib/nginx/modules /var/lib/nginx/run /var/lib/nginx/tmp /etc/nginx/ssl

# 定义构建参数
ARG SSL_CERT
ARG SSL_KEY

# 从构建参数创建 SSL 证书文件（如果提供）
RUN if [ -n "$SSL_CERT" ]; then \
        echo "$SSL_CERT" > /etc/nginx/ssl/keycikeyci.com.crt && \
        chmod 644 /etc/nginx/ssl/keycikeyci.com.crt; \
    fi

RUN if [ -n "$SSL_KEY" ]; then \
        echo "$SSL_KEY" > /etc/nginx/ssl/keycikeyci.com.key && \
        chmod 600 /etc/nginx/ssl/keycikeyci.com.key; \
    fi

# 暴露端口
EXPOSE 80 8080 443 8443

# 使用自定义启动脚本
CMD ["sh", "/nginx-init.sh"]
